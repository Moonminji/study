[Race Condition (경쟁 상태)]
: 두 개 이상의 스레드들이 공유된 자원에 접근하려고 할 때, 동기화 메커니즘 없이 접근하려고하면 실행 결과가 같지 않고 달라지는 상황이 발생한다.

[1] 경쟁 프로세스가 직면하는 문제
  1) Mutual exclusion (상호배제)
  : 두 개 이상의 프로세스가 공용 데이터에 동시에 접근을 하는 것을 막아야 한다. 
    즉, 한 프로세스가 공용 데이터를 사용하고 있으면 그 자원을 사용하지 못하도록 막거나, 다른 프로세스가 그 자원을 사용하지 못하도록 막으면 이 문제를 피할 수 있다.
    
  2) Deadlock (교착 상태)
  : 위와 같은 상호 배제를 시행하면 추가적인 제어 문제가 발생한다.
  프로세스가 각자 프로그램을 실행하기 위해 두 자원 모두에 엑세스 해야 한다면, 프로세스는 두 자원 모두를 필요로 하므로 두 리소스를 사용하여 프로그램을 수행할 때까지 이미 소유한 리소스를 해제하지 않는다. 
  이러한 상황에서 두 프로세스는 교착 상태에 빠지게 되는 문제가 발생할 수 있다.
  = 두 개 이상의 작업이 서로 상대방의 작업이 끝나기만을 기다리고 있기 때문에 결과적으로는 아무것도 완료되지 못하는 상태.
  
  3) Starvation (기아 상태)
  : 프로세스들이 더 이상 진행을 하지 못하고 영구적으로 블록되어 있는 상태로, 시스템 자원에 대한 경쟁 도중에 발생할 수 있고 프로세스 간의 통신 과정에도 발생할 수 있는 문제이다. 
  두 개 이상의 작업이 서로 상대방의 작업이 끝나기만을 기다리고 있기 때문에 결과적으로는 아무것도 완료되지 못하는 상태.
